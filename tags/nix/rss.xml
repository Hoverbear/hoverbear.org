<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Hoverbear Consulting - Nix</title>
        <link>https://hoverbear.org</link>
        <description>A computer scientist working in open source towards a more hopeful future.</description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://hoverbear.org/tags/nix/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Tue, 04 May 2021 00:00:00 +0000</lastBuildDate>
        <item>
            <title>Using rust-bindgen in Nix</title>
            <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
            <link>https://hoverbear.org/blog/rust-bindgen-in-nix/</link>
            <guid>https://hoverbear.org/blog/rust-bindgen-in-nix/</guid>
            <description>&lt;p&gt;While building the Nix packages for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zombodb&#x2F;plrust&quot;&gt;pl&#x2F;Rust&lt;&#x2F;a&gt; I bumped into a curious issue: I couldn&#x27;t link to &lt;code&gt;stdio.h&lt;&#x2F;code&gt;, or &lt;code&gt;stdbool.h&lt;&#x2F;code&gt;! They were clearly on my path, too.&lt;&#x2F;p&gt;
&lt;p&gt;It flummoxed me for quite some time, but exploring the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NixOS&#x2F;nixpkgs&#x2F;blob&#x2F;master&#x2F;pkgs&#x2F;applications&#x2F;networking&#x2F;browsers&#x2F;firefox&#x2F;common.nix#L247-L253&quot;&gt;&lt;code&gt;firefox&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package led to a way forward. It was &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust-bindgen&quot;&gt;&lt;code&gt;rust-bindgen&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; not finding libraries!&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Custom live media with Nix flakes</title>
            <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
            <link>https://hoverbear.org/blog/nix-flake-live-media/</link>
            <guid>https://hoverbear.org/blog/nix-flake-live-media/</guid>
            <description>&lt;p&gt;I&#x27;ve always been quite fond of booting live media. To test or install a new operating system, to recover an old one, find some privacy, or to do a myriad of other specialized tasks. LiveUSBs and liveCDs introduced to me a new way of thinking about my computer.&lt;&#x2F;p&gt;
&lt;p&gt;It improved my mental model of the separation of between the machine, the UEFI (or BIOS), any bootloaders, and the operating system itself.&lt;&#x2F;p&gt;
&lt;p&gt;As I learnt about them over 15 years ago I spent months exploring ways to use them. I used them to rescue systems for myself and others, diagnose hardware, recovery files, and quickly set up machines. &lt;&#x2F;p&gt;
&lt;p&gt;With Nix flakes, we can define a custom live system and build it with minimal steps. This NixOS live system which could be a composition of existing NixOS modules, or an entirely new configuration.&lt;&#x2F;p&gt;
</description>
        </item>
    </channel>
</rss>
